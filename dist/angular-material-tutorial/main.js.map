{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/data/data.service.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post-product-dialog/post-product-dialog.component.css","webpack:///./src/app/post-product-dialog/post-product-dialog.component.html","webpack:///./src/app/post-product-dialog/post-product-dialog.component.ts","webpack:///./src/app/register-user/register-user.component.css","webpack:///./src/app/register-user/register-user.component.html","webpack:///./src/app/register-user/register-user.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidenav {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\nmat-sidenav {\\r\\n  width: 250px;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\na:hover,\\r\\na:active {\\r\\n  color: lightgray;\\r\\n}\\r\\n\\r\\n.navigation-items {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n  display: inline-block;\\r\\n  height: 30px;\\r\\n  margin: 0 auto;\\r\\n  padding-right: 5px;\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  width: 15%;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  display: inline-block;\\r\\n  line-height: 30px;\\r\\n  margin: 0;\\r\\n  width: 85%;\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container>\\r\\n  <mat-sidenav  #sidenav role=\\\"navigation\\\">\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item\\r\\n         *ngIf=\\\"!auth.isAuthenticated()\\\"\\r\\n         (click)=\\\"auth.login()\\\">\\r\\n        <mat-icon class=\\\"icon\\\">input</mat-icon>\\r\\n        <span class=\\\"label\\\">Login</span>\\r\\n      </a>\\r\\n      <a mat-list-item\\r\\n         *ngIf=\\\"auth.isAuthenticated()\\\"\\r\\n         routerLink=\\\"/\\\">\\r\\n        <mat-icon class=\\\"icon\\\">home</mat-icon>\\r\\n        <span class=\\\"label\\\">Home</span>\\r\\n      </a>\\r\\n      <a mat-list-item\\r\\n         routerLink=\\\"/dashboard\\\">\\r\\n        <mat-icon class=\\\"icon\\\">dashboard</mat-icon>\\r\\n        <span class=\\\"label\\\">Dashboard</span>\\r\\n      </a>\\r\\n      <a  mat-list-item\\r\\n          *ngIf=\\\"auth.isAuthenticated()\\\"\\r\\n          (click)=\\\"auth.logout()\\\" type=\\\"button\\\">\\r\\n        <mat-icon class=\\\"icon\\\">input</mat-icon>\\r\\n        <span class=\\\"label\\\">LogOut</span>\\r\\n      </a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <div fxHide.gt-xs>\\r\\n        <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n          <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div>\\r\\n        <a routerLink=\\\"/\\\">\\r\\n          Sample Catalog\\r\\n        </a>\\r\\n      </div>\\r\\n      <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\r\\n        <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\r\\n          <li>\\r\\n            <a\\r\\n              *ngIf=\\\"!auth.isAuthenticated()\\\"\\r\\n              (click)=\\\"auth.login()\\\">\\r\\n              <mat-icon class=\\\"icon\\\">input</mat-icon>\\r\\n              <span  class=\\\"label\\\">Login</span>\\r\\n            </a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a\\r\\n              *ngIf=\\\"auth.isAuthenticated()\\\"\\r\\n              routerLink=\\\"/\\\">\\r\\n              <mat-icon class=\\\"icon\\\">home</mat-icon>\\r\\n              <span class=\\\"label\\\">Home</span>\\r\\n            </a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a\\r\\n              routerLink=\\\"/dashboard\\\">\\r\\n              <mat-icon class=\\\"icon\\\">dashboard</mat-icon>\\r\\n              <span class=\\\"label\\\">Dashboard</span>\\r\\n            </a>\\r\\n          </li>\\r\\n         <li>\\r\\n          <a\\r\\n            routerLink=\\\"/register\\\">\\r\\n            <mat-icon class=\\\"icon\\\">Register</mat-icon>\\r\\n            <span class=\\\"label\\\">Register</span>\\r\\n          </a>\\r\\n        </li>\\r\\n          <li>\\r\\n            <a *ngIf=\\\"auth.isAuthenticated()\\\" (click)=\\\"auth.logout()\\\" type=\\\"button\\\">\\r\\n              <mat-icon class=\\\"icon\\\">input</mat-icon>\\r\\n              <span class=\\\"label\\\">LogOut</span>\\r\\n            </a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </mat-toolbar>\\r\\n    <main>\\r\\n      <router-outlet></router-outlet>\\r\\n    </main>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(public auth: AuthService) {\r\n    auth.handleAuthentication();\r\n  }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {MaterialModule} from './material.module';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {WelcomeComponent} from './welcome/welcome.component';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {AppRouters} from './app.routes';\r\nimport {DataService} from './data/data.service';\r\nimport {AuthService} from './auth.service';\r\nimport {PostDialogComponent} from './post-dialog/post-dialog.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { PostProductDialogComponent } from './post-product-dialog/post-product-dialog.component';\nimport { RegisterUserComponent } from './register-user/register-user.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomeComponent,\r\n    DashboardComponent,\r\n    PostDialogComponent,\r\n    PostProductDialogComponent,\r\n    RegisterUserComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    AppRouters,\r\n    FormsModule,\r\n  ],\r\n  providers: [DataService, AuthService],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    PostDialogComponent,\r\n    PostProductDialogComponent\r\n  ]\r\n})\r\nexport class AppModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {WelcomeComponent} from './welcome/welcome.component';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {RegisterUserComponent} from './register-user/register-user.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: WelcomeComponent},\r\n  {path: 'dashboard', component: DashboardComponent},\r\n  {path: 'register', component: RegisterUserComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRouters {}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport * as auth0 from 'auth0-js';\r\n\r\n// why do you need defining window as any?\r\n// check this: https://github.com/aws/aws-amplify/issues/678#issuecomment-389106098\r\n(window as any).global = window;\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  auth0 = new auth0.WebAuth({\r\n    clientID: 'AAQbG8REMxtSrmXQiPGcl3Uochf7OuHS',\r\n    domain: 'bk-tmp.auth0.com',\r\n    responseType: 'token',\r\n    redirectUri: 'http://localhost:4200/',\r\n    scope: 'openid'\r\n  });\r\n\r\n  accessToken: String;\r\n  expiresAt: Number;\r\n\r\n  constructor(public router: Router) {}\r\n\r\n  public login(): void {\r\n    this.auth0.authorize();\r\n  }\r\n\r\n  public handleAuthentication(): void {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken) {\r\n        window.location.hash = '';\r\n        this.accessToken = authResult.accessToken;\r\n        this.expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\r\n        this.router.navigate(['/dashboard']);\r\n      } else if (err) {\r\n        this.router.navigate(['/']);\r\n        console.log(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  public logout(): void {\r\n    // Remove tokens and expiry time from localStorage\r\n    this.accessToken = null;\r\n    this.expiresAt = null;\r\n    // Go back to the home route\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    // Check whether the current time is past the\r\n    // Access Token's expiry time\r\n    return new Date().getTime() < this.expiresAt;\r\n  }\r\n}\r\n","module.exports = \".card {\\r\\n  min-width: 80%;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  max-height: 500px;\\r\\n  min-width: 100%;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n}\\r\\n\\r\\na {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <br>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" fxLayout.gt-md=\\\"row\\\"  fxLayoutAlign=\\\"space-around center\\\" class=\\\"content\\\">\\r\\n        <div class=\\\"blocks\\\" *ngIf=\\\"auth.isAuthenticated()\\\">\\r\\n          <button button=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\">\\r\\n            <mat-icon>add</mat-icon> Add Product\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"blocks\\\">\\r\\n          <a button mat-raised-button color=\\\"primary\\\" (click)=\\\"auth.login()\\\" *ngIf=\\\"!auth.isAuthenticated()\\\">\\r\\n            <mat-icon>input</mat-icon>Login to Add Product\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"content\\\">\\r\\n        <mat-card class=\\\"card\\\" >\\r\\n          <mat-card-title fxLayout.gt-xs=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\r\\n            <h3>Products</h3>\\r\\n          </mat-card-title>\\r\\n          <mat-card-content>\\r\\n            <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n              <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n                <ng-container matColumnDef=\\\"date_purchased\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef> Date Purchased </mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let element\\\"> {{element.date_purchased  | date: 'd/M/y'}} </mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"title\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef> Title </mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"category\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef> Category </mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let element\\\"> {{element.product_category}} </mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"delete\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a (click)=\\\"deletePost(element.position)\\\" type=\\\"button\\\">\\r\\n                      <mat-icon class=\\\"icon\\\">delete</mat-icon>\\r\\n                    </a>\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n              </mat-table>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {DataService} from '../data/data.service';\r\nimport {Product} from '../Product';\r\nimport {DataSource} from '@angular/cdk/table';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {AuthService} from '../auth.service';\r\nimport {PostProductDialogComponent} from '../post-product-dialog/post-product-dialog.component';\r\nimport {MatDialog} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent {\r\n  constructor(public auth: AuthService, public dialog: MatDialog, private dataService: DataService) {\r\n  }\r\n\r\n  displayedColumns = ['date_purchased', 'title', 'category', 'delete'];\r\n  dataSource = new PostDataSource(this.dataService);\r\n\r\n  deletePost(id) {\r\n    if (this.auth.isAuthenticated()) {\r\n      this.dataService.deleteProductPost(id);\r\n      this.dataSource = new PostDataSource(this.dataService);\r\n    } else {\r\n      alert('Login in Before');\r\n    }\r\n  }\r\n\r\n  openDialog(): void {\r\n    let dialogRef = this.dialog.open(PostProductDialogComponent, {\r\n      width: '600px',\r\n      data: 'Add Post'\r\n    });\r\n    dialogRef.componentInstance.event.subscribe((result) => {\r\n      this.dataService.addProductPost(result.data);\r\n      this.dataSource = new PostDataSource(this.dataService);\r\n    });\r\n  }\r\n}\r\n\r\nexport class PostDataSource extends DataSource<any> {\r\n  constructor(private dataService: DataService) {\r\n    super();\r\n  }\r\n\r\n  connect(): Observable<Product[]> {\r\n    return this.dataService.getProductData();\r\n  }\r\n\r\n  disconnect() {\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Post} from '../Post';\r\nimport {Observable, of} from 'rxjs';\r\nimport { Product } from '../Product';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  ELEMENT_DATA: Post[] = [\r\n    {position: 0, title: 'Post One', category: 'Web Development', date_posted: new Date(), body: 'Body 1'},\r\n    {position: 1, title: 'Post Two', category: 'Android Development', date_posted: new Date(), body: 'Body 2'},\r\n    {position: 2, title: 'Post Three', category: 'IOS Development', date_posted: new Date(), body: 'Body 3'},\r\n    {position: 3, title: 'Post Four', category: 'Android Development', date_posted: new Date(), body: 'Body 4'},\r\n    {position: 4, title: 'Post Five', category: 'IOS Development', date_posted: new Date(), body: 'Body 5'},\r\n    {position: 5, title: 'Post Six', category: 'Web Development', date_posted: new Date(), body: 'Body 6'},\r\n  ];\r\n\r\n  PRODUCT_DATA: Product[] = [\r\n    {position: 0, title: 'Lego Blocks', description: 'Lego classic Blocks', product_category: 'Toys', Seller: 'Toys R US',\r\n    date_purchased: new Date(), Quantity: 5},\r\n    {position: 1, title: 'Flash Furniture Green Plastic chair', description: 'Stackable School Chair with 10.5 Seat Height',\r\n     product_category: 'Furniture', Seller: 'Amazon', date_purchased: new Date(), Quantity: 2},\r\n  ];\r\n\r\n  categories = [\r\n    {value: 'Web-Development', viewValue: 'Web Development'},\r\n    {value: 'Android-Development', viewValue: 'Android Development'},\r\n    {value: 'IOS-Development', viewValue: 'IOS Development'}\r\n  ];\r\n\r\n  product_categories = [\r\n    {value: 'Furniture', viewValue: 'Furniture'},\r\n    {value: 'Clothing', viewValue: 'Clothing'},\r\n    {value: 'Toys', viewValue: 'Toys'},\r\n    {value: 'Books', viewValue: 'Books'}\r\n  ];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  getData(): Observable<Post[]> {\r\n    return of<Post[]>(this.ELEMENT_DATA);\r\n  }\r\n\r\n  getProductData(): Observable<Product[]> {\r\n    return of<Product[]>(this.PRODUCT_DATA);\r\n  }\r\n\r\n  getCategories() {\r\n    return this.categories;\r\n  }\r\n\r\n  getProductCategories() {\r\n    return this.product_categories;\r\n  }\r\n\r\n  addPost(data) {\r\n    this.ELEMENT_DATA.push(data);\r\n  }\r\n\r\n  deletePost(index) {\r\n    this.ELEMENT_DATA = [...this.ELEMENT_DATA.slice(0, index), ...this.ELEMENT_DATA.slice(index + 1)];\r\n  }\r\n\r\n  dataLength() {\r\n    return this.ELEMENT_DATA.length;\r\n  }\r\n\r\n  addProductPost(data) {\r\n    this.PRODUCT_DATA.push(data);\r\n  }\r\n\r\n  deleteProductPost(index) {\r\n    this.PRODUCT_DATA = [...this.PRODUCT_DATA.slice(0, index), ...this.PRODUCT_DATA.slice(index + 1)];\r\n  }\r\n\r\n  productDataLength() {\r\n    return this.PRODUCT_DATA.length;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatTableModule,\r\n  MatDialogModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n  ],\r\n  exports: [\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","module.exports = \".example-form {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-form > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.close{\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<h1 mat-dialog-title>{{data}}</h1>\\r\\n<div mat-dialog-content>\\r\\n  <form class=\\\"example-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Post Title\\\" type=\\\"text\\\" required [(ngModel)]=\\\"blogPost.title\\\" name=\\\"name\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput placeholder=\\\"Post Body\\\" required [(ngModel)]=\\\"blogPost.body\\\" name=\\\"body\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <mat-select matInput placeholder=\\\"Post Category\\\" required [(ngModel)]=\\\"blogPost.category\\\" name=\\\"category\\\">\\r\\n        <mat-option *ngFor=\\\"let cat of categories\\\" [value]=\\\"cat.value\\\">\\r\\n          {{ cat.viewValue }}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Save</button>\\r\\n  </form>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button class=\\\"close\\\" (click)=\\\"onNoClick()\\\" color=\\\"warn\\\">Cancel</button>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {DataService} from '../data/data.service';\r\n\r\n@Component({\r\n  selector: 'app-post-dialog',\r\n  templateUrl: './post-dialog.component.html',\r\n  styleUrls: ['./post-dialog.component.css']\r\n})\r\nexport class PostDialogComponent {\r\n  blogPost = {\r\n    title: '',\r\n    body: '',\r\n    category: '',\r\n    position: 0,\r\n    date_posted: new Date()\r\n  };\r\n  public event: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PostDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dataService: DataService\r\n  ) {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.blogPost.position = this.dataService.dataLength();\r\n    this.event.emit({data: this.blogPost});\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  categories = this.dataService.getCategories();\r\n}\r\n","module.exports = \".example-form {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-form > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .close{\\r\\n    width: 100%;\\r\\n  }\\r\\n  \"","module.exports = \"<h1 mat-dialog-title>{{data}}</h1>\\r\\n<div mat-dialog-content>\\r\\n  <form class=\\\"example-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Product Title\\\" type=\\\"text\\\" required [(ngModel)]=\\\"productPost.title\\\" name=\\\"name\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput placeholder=\\\"Product Description\\\" required [(ngModel)]=\\\"productPost.description\\\" name=\\\"description\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <mat-select matInput placeholder=\\\"Post Category\\\" required [(ngModel)]=\\\"productPost.product_category\\\" name=\\\"category\\\">\\r\\n        <mat-option *ngFor=\\\"let cat of categories\\\" [value]=\\\"cat.value\\\">\\r\\n          {{ cat.viewValue }}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput placeholder=\\\"Product Seller\\\" required [(ngModel)]=\\\"productPost.Seller\\\" name=\\\"Seller\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput placeholder=\\\"Product Quantity\\\" required [(ngModel)]=\\\"productPost.Quantity\\\" name=\\\"Quantity\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Save</button>\\r\\n  </form>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button class=\\\"close\\\" (click)=\\\"onNoClick()\\\" color=\\\"warn\\\">Cancel</button>\\r\\n</div>\"","import {Component, EventEmitter, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {DataService} from '../data/data.service';\r\n\r\n@Component({\r\n  selector: 'app-post-product-dialog',\r\n  templateUrl: './post-product-dialog.component.html',\r\n  styleUrls: ['./post-product-dialog.component.css']\r\n})\r\nexport class PostProductDialogComponent {\r\n  productPost = {\r\n    title: '',\r\n    description: '',\r\n    product_category: '',\r\n    position: 0,\r\n    Seller: '',\r\n    Quantity: 0,\r\n    date_purchased: new Date()\r\n  };\r\n\r\n  categories = this.dataService.getProductCategories();\r\n\r\n  public event: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PostProductDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dataService: DataService\r\n  ) {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.productPost.position = this.dataService.dataLength();\r\n    this.event.emit({data: this.productPost});\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  register-user works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>Sample application</h1>\\r\\n  <p>\\r\\n   Home page content goes here.\\r\\n    <br> Click on Login to get Started!!!\\r\\n  </p>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}